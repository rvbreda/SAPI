<?php

/**
 * Application level Controller
 *
 * This file is application-wide controller file. You can put all
 * application-wide controller-related methods here.
 *
 * PHP 5
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       app.Controller
 * @since         CakePHP(tm) v 0.2.9
 * @license       MIT License (http://www.opensource.org/licenses/mit-license.php)
 */
App::uses('Controller', 'Controller');

/**
 * Application Control
 *
 * Add your application-wide methods in the class below, your controllers
 * will inherit them.
 *
 * @package       app.Controller
 * @link http://book.cakephp.org/2.0/en/controllers.html#the-app-controller
 */
class AppController extends Controller {

    public $components = array(
        'Acl',
        'Auth' => array(
            'authenticate' => array(
                'Form' => array(
                    //Diz para o componente que o username utilizado pela aplicacao na verdade ï¿½ o email.
                    'fields' => array('username' => 'email'),
                    'scope' => array('User.active' => 1)
                ),
            ),
            'authorize' => array(
                'Actions' => array('actionPath' => 'controllers')
            ),
        ),
        'Session'
    );
    public $helpers = array('Html', 'Form', 'Session');

    function isAuthorized() {
        return true;
    }

    public function beforeFilter() {
        //Configure AuthComponent
        $this->Auth->loginAction = array('controller' => 'users', 'action' => 'login');
        $this->Auth->logoutRedirect = array('controller' => 'users', 'action' => 'login');
        $this->Auth->loginError = 'Invalid e-mail / password combination.  Please try again';
        $this->Auth->authError = 'Permission denied';
        $this->Auth->authorize = 'actions';
        $message = $this->Session->read('Message');
        $this->Auth->redirectDeniedToController = "users";
        $this->Auth->redirectDeniedToAction = "login";
        $this->Auth->authError = __("AUTHERROR", true);
        $this->Auth->actualAuthError = __("Area Restrita. Efetue login.", true);
        if (!empty($message) AND isset($message['auth'])) {
            $authMessage = $message['auth']['message'];
            if ($authMessage == $this->Auth->authError) {
                $this->Session->setFlash($this->Auth->actualAuthError, $this->Auth->flashElement, array(), 'auth');
                $this->redirect(array('controller' => $this->Auth->redirectDeniedToController, 'action' => $this->Auth->redirectDeniedToAction));
            }
        }
        $this->set('current_user', $this->Auth->user());
        $this->set('logado',$this->Auth->isAuthorized());
    }

}
